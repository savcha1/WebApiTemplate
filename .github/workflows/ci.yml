name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNT_ROLE: assume-admin-denali
      AWS_ACCOUNT_ID: ${{ secrets.DIV_AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DIV_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DIV_AWS_SECRET_ACCESS_KEY }}
  
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get ECR Login for Assumed Account
      uses: konsentus/action.assume-ecr-login@master
      id: ecr-login-assumed

    - name: "Login to AWS ECR"
      run: ${{ steps.ecr-login-assumed.outputs.login }}

    - name: "Build, tag, and push the image to Amazon ECR"
      env:
        ECR_REGISTRY: ${{secrets.DIV_AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPO: test-savita
        IMAGE_VERSION: 0.3
      run: |
        # Build a docker container and push it to ECR
        docker build -t ${{ECR_REGISTRY}}/${{ECR_REPO}}:${{IMAGE_VERSION}} .
        echo "Pushing image to ECR..."
        docker push ${{ECR_REGISTRY}}/${{ECR_REPO}}:${{IMAGE_VERSION}}
        echo "::set-output name=image::${{ECR_REGISTRY}}/${{ECR_REPO}}:${{IMAGE_VERSION}}"
